
import sys
import itertools
import numpy as np 

def findFreqOfK(arr, n, k):
    
    occurance = 0
    for i in range(1,n): 
        if arr[i] == k:
            occurance+=1

    return occurance


def findFreqOfK_bs_recursive(arr, l, r , k ):
    
    if l >r:
        return -1
    
    mid = l + (r-l)/2
    mid = int(mid)

    if mid < 1  or arr[mid] == k:
         return mid 
    if arr[mid] > k:
         return findFreqOfK_bs_recursive(arr, l, mid-1 ,k )
    elif arr[mid] < k:
        return findFreqOfK_bs_recursive(arr, mid + 1, r , k)
    
        
def findOccurance(arr, k):
    second = 0
    first = findFreqOfK_bs_recursive(arr, 0, len(arr) -1 , k ) 
    print(f' first : {first} ' )
    if first < 0: 
        return 0
    
    second = findFreqOfK_bs_recursive(arr[ (first+1) :] , 0 , len(arr[ (first+1) :]) -1 , k )
    if second < 0:
        return first

    if first > second:
        return 1
    
    print(f' second : {second} ' )
    return first - second 


def main() -> int:
    """Echo the input arguments to standard output"""
    arr = [11, 3, 20, 4, 1, 10,2, 98 , 6,8 ,8,8,8,8,7, 5,9,0, 12] 
    #x = findFreqOfK(arr, len(arr)-1 , 0 )
    #print (x)

    arr = np.sort(arr)
    print(arr)
    for i in arr:
        x = findOccurance (arr, i )
        print (x)
    # x = find_small_recursive_array(arr, 0 , len(arr)-1 , arr[0] )
    # print (x)
    
    return 0

if __name__ == '__main__':
    sys.exit(main())
    
    
    
    